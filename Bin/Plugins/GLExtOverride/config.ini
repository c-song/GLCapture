//////////////////////////////////////////////////////////////
//
//   Extension override config file
//
//   To use, add the following to the plugins section of gliconfig.ini:
//
//      ExtensionOverride = ("GLExtOverride/GLExtOverride.dll")
//
//   Note: Changing this file will affect all GLIntercept sessions that load
//         this DLL. To only affect a single GLIntercept session, place the
//         relevant options inside this plugins' section in gliConfig.ini.
//
//         (This file is parsed first for the defaults, then the options in 
//          gliConfig.ini can over-ride the defaults)
//
//////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////
// Custom strings for vendor/renderer etc
//////////////////////////////////////////////////////////////

// VendorString        = "Custom vendor string";
// RendererString      = "Custom renderer string";
// VersionString       = "1.1.0 - Custom version string";
// ShaderVersionString = "1.0.0 - Custom shader version string";

//////////////////////////////////////////////////////////////
// Enable/disable GL_GREMEDY_string_marker extension 
//  (enables string output in log files)
//////////////////////////////////////////////////////////////

EnableStringMarker = True;


//////////////////////////////////////////////////////////////
//  List of extensions to specify/ override
//
//  ExtensionsString - List of extensions to replace the existing extension string with.
//                     (Useful if a bad application copies the extension string to a 
//                      fixed length buffer)
//
//  AddExtensions    - List of extensions to add to the extension string. Useful for 
//                     programming with extensions that expose their entry points but are 
//                     still in development so are not exposed on the extension string.
//                     (ie. GLSL, ARB_texture_env_crossbar)
//
//  RemoveExtensions - List of extensions to remove from the extension string. Useful to 
//                     test fallback paths in programs. (also can update the version string
//                     above to work with this)
//
//////////////////////////////////////////////////////////////

// ExtensionsString = (GL_EXT_A, GL_EXT_B, GL_EXT_C, GL_EXT_D);

// AddExtensions = (GL_ARB_shading_language_100, 
//                  GL_ARB_shader_objects, 
//                  GL_ARB_fragment_shader, GL_ARB_vertex_shader);

// RemoveExtensions = (GL_S3_s3tc,WGL_EXT_swap_control);


//////////////////////////////////////////////////////////////
//  List of WGL extensions to specify/ override
//
//  WGLExtensionsString - List of WGL extensions to replace the existing extension string with.
//
//  WGLAddExtensions    - List of WGL extensions to add to the extension string.
//
//  WGLRemoveExtensions - List of WGL extensions to remove from the extension string.
//
//////////////////////////////////////////////////////////////

// WGLExtensionsString = (GL_EXT_A, GL_EXT_B, GL_EXT_C, GL_EXT_D);

// WGLAddExtensions = (GL_EXT_A,GL_EXT_B);
// WGLRemoveExtensions = (WGL_ARB_buffer_region,WGL_ARB_extensions_string,WGL_NV_render_texture_rectangle);

