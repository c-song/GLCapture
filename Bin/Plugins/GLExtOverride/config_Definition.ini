///////////////////////////////////////////////////////////////////////////////
// The definitions of the extension override plugin
///////////////////////////////////////////////////////////////////////////////

ExtensionOverride = ("GLExtOverride/GLExtOverride.dll")
{
  PluginEnabled = (Boolean);
  {
    DefaultValue = False;
    Comment = "If enabled, this plugin provides a way to override the extension and version strings OpenGL provides to an application";    
  }

  VendorString = (String);
  {
    DefaultValue = "";
    Comment = "The override vendor string. (Empty for no override) eg. 'Custom vendor string'";
    IgnoreIfValueEquals = "";
  }

  RendererString = (String);
  {
    DefaultValue = "";
    Comment = "The override renderer string. (Empty for no override) eg. 'Custom renderer string'";
    IgnoreIfValueEquals = "";
  }

  VersionString = (String);
  {
    DefaultValue = "";
    Comment = "The override version string. (Empty for no override) eg. '1.1.0 - Custom version string'";
    IgnoreIfValueEquals = "";
  }

  ShaderVersionString = (String);
  {
    DefaultValue = "";
    Comment = "The override GLSL shader version string. (Empty for no override) eg. '1.0.0 - Custom shader version string'";
    IgnoreIfValueEquals = "";
  }


  EnableStringMarker = (Boolean);
  {
    DefaultValue = True;
    Comment = "Enable/disable GL_GREMEDY_string_marker extension. (enables string output in log files)";        
  }


  ExtensionsString = (StringList);
  {
    DefaultValue = ("");
    Comment = "List of extensions to replace the existing extension string with. (Empty for no override) (Useful if a bad application copies the extension string to a fixed length buffer)";
    IgnoreIfValueEquals = "";
  }


  AddExtensions = (StringList);
  {
    DefaultValue = ("");
    Comment = "List of extensions to add to the extension string. Useful for programming with extensions that expose their entry points but are still in development so are not exposed on the extension string. (ie. GLSL, ARB_texture_env_crossbar)";
    IgnoreIfValueEquals = "";
  }


  RemoveExtensions = (StringList);
  {
    DefaultValue = ("");
    Comment = "List of extensions to remove from the extension string. Useful to test fallback paths in programs. (also can update the version string above to work with this)";
    IgnoreIfValueEquals = "";
  }


  WGLExtensionsString = (StringList);
  {
    DefaultValue = ("");
    Comment = "List of WGL extensions to replace the existing extension string with. (Empty for no override)";
    IgnoreIfValueEquals = "";
  }

  WGLAddExtensions = (StringList);
  {
    DefaultValue = ("");
    Comment = "List of WGL extensions to add to the extension string.";
    IgnoreIfValueEquals = "";
  }

  WGLRemoveExtensions = (StringList);
  {
    DefaultValue = ("");
    Comment = "List of WGL extensions to remove from the extension string.";
    IgnoreIfValueEquals = "";
  }
}
