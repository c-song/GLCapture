//////////////////////////////////////////////////////////////
//
//   Ping plugin config file
//
//   The "ping" plugin will attempt to force a refresh of the 
//   OpenGL windows if the framerate is too low. This is mostly useful
//   for OpenGL apps that do not continually update. (ie. only update via
//   windows "paint" messages.)
//
//   Other functionality of GLIntercept requires a continued framerate
//   to function correctly (ie frame-grabber and shader editor) Use this
//   plugin when these functionality is required in applications that do
//   not continually update.
//
//   To use, add the following to the plugins section of gliconfig.ini:
//
//      PingPlugin = ("GLFramePing/GLFramePing.dll")
//
//   Note: Changing this file will affect all GLIntercept sessions that load
//         this DLL. To only affect a single GLIntercept session, place the
//         relevant options inside this plugins' section in gliConfig.ini.
//
//         (This file is parsed first for the defaults, then the options in 
//          gliConfig.ini can over-ride the defaults)
//
//////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////
//  Ping Options
//////////////////////////////////////////////////////////////
//
//  UpdateFPS - The minimum target frames per second. If the OpenGL window
//              does not render a frame to match this FPS, all the known OpenGL
//              windows will be refreshed.
//
//  ForceUpdate - The frame ping process is usually non-intrusive. However, if
//                the desired results are not achieved, enabling this flag will
//                attempt to force the window updates. 
//                WARNING - Enabling this flag may crash some applications.
//
//////////////////////////////////////////////////////////////

UpdateFPS    = 4;
ForceUpdate  = False;

